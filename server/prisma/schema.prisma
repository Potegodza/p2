generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  name      String?
  telephone String?  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
  role      String   @default("user")
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  rentals   CarRental[] // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö CarRental
}

model Car {
  id           Int      @id @default(autoincrement())
  brand        String   // ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠
  model        String   // ‡∏£‡∏∏‡πà‡∏ô
  year         Int      // ‡∏õ‡∏µ
  licensePlate String   @unique // ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ
  pricePerDay  Float    // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
  status       String   @default("available") // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: available, rented, maintenance
  images       Image[]
  rentals      CarRental[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model CarRental {
  id         Int      @id @default(autoincrement())
  startDate  DateTime
  endDate    DateTime
  totalPrice Float
  status     String   @default("Pending") // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: Pending, Active, Completed, Cancelled
  phoneNumber String? // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏™‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ cart
  
  // üéØ PROMOTION FIELDS
  promotionApplied Boolean @default(false) // ‡πÉ‡∏ä‡πâ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  freeDays         Int?    // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ü‡∏£‡∏µ
  originalPrice     Float?  // ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô
  
  renter     User     @relation(fields: [renterId], references: [id])
  renterId   Int
  
  car        Car      @relation(fields: [carId], references: [id])
  carId      Int

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Image {
  id         Int      @id @default(autoincrement())
  asset_id   String
  public_id  String
  url        String
  secure_url String
  
  car        Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId      Int

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}